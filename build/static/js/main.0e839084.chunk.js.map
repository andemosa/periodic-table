{"version":3,"sources":["components/AppMenu/AppMenu.js","DataLayer.js","components/PeriodicTable/PeriodicTable.js","reducer.js","components/PeriodicTable/PeriodicTableLegend.js","components/AppWorkArea/AppWorkArea.js","ico/search.svg","components/NavBar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["AppMenu","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","PeriodicTable","periodicTable","colorMap","periodicElOpacity","data","useState","xpos","setXpos","ypos","setYpos","elWidth","setElWidth","elHeight","setElHeight","handleElementClick","e","targetEl","target","offsetParent","newWidth","dataset","category","name","offsetWidth","newHeight","offsetHeight","newXpos","offsetLeft","newYpos","offsetTop","console","log","className","style","top","left","width","height","map","element","onClick","data-name","data-category","opacity","gridColumn","gridRow","background","borderBottom","number","symbol","user","elements","actinide","lanthanide","metalloid","actionTypes","state","action","type","PeriodicTableLegend","dispatch","legendItem","useRef","handleCategoryClick","parentElement","elcate","Object","keys","key","ref","AppWorkArea","NavBar","menuOpen","setMenuOpen","menuCloseClass","setMenuCloseClass","src","SearchIcon","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e839084.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction AppMenu() {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppMenu\r\n","import React, {\r\n\tcreateContext,\r\n\tuseContext,\r\n\tuseReducer\r\n} from 'react'\r\n\r\n// prepare the datalayer\r\nexport const DataLayerContext = createContext()\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n\t<DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n\t\t{children}\r\n\t</DataLayerContext.Provider>\r\n)\r\n\r\n// allow data pulling from DataLayer\r\nexport const useDataLayerValue = () => useContext(DataLayerContext)","import React, { useState } from 'react'\r\nimport './PeriodicTable.css'\r\nimport { useDataLayerValue } from '../../DataLayer'\r\n\r\nfunction PeriodicTable() {\r\n\tconst [{periodicTable}] = useDataLayerValue()\r\n\tconst [{colorMap}] = useDataLayerValue()\r\n\tconst [{periodicElOpacity}] = useDataLayerValue()\r\n  const data = periodicTable\r\n\r\n\tconst [xpos, setXpos] = useState()\r\n\tconst [ypos, setYpos] = useState()\r\n\tconst [elWidth, setElWidth] = useState()\r\n\tconst [elHeight, setElHeight] = useState()\r\n\r\n\tconst handleElementClick = function (e) {\r\n\t\tconst targetEl = e.target.offsetParent\r\n\t\tconst elcate = targetEl.dataset.category\r\n\t\tconst name = targetEl.dataset.name\r\n\r\n\t\tconst newWidth = targetEl.offsetWidth\r\n\t\tconst newHeight = targetEl.offsetHeight\r\n\r\n\t\tconst newXpos = (targetEl.offsetLeft - (18 + newWidth))\r\n\t\tconst newYpos = targetEl.offsetTop\r\n\r\n\t\tconsole.log('Normal X: ', newXpos)\r\n\t\tconsole.log('Minus X 16: ', newXpos - 16)\r\n\t\tconsole.log('Minus X: ', newXpos - (16 + newWidth))\r\n\r\n\t\tsetXpos(newXpos)\r\n\t\tsetYpos(newYpos)\r\n\t\tsetElWidth(newWidth)\r\n\t\tsetElHeight(newHeight)\r\n\r\n\t\t// console.log(e.target.offsetParent)\r\n\t\t// console.log(elcate)\r\n\t\t// console.log(name)\r\n\t}\r\n\r\n  return (\r\n    <div className=\"periodic-table\">\r\n\t\t\t<div className=\"cover\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: ypos,\r\n\t\t\t\t\tleft: xpos,\r\n\t\t\t\t\twidth: elWidth,\r\n\t\t\t\t\theight: elHeight,\r\n\t\t\t\t}}\r\n\t\t\t\t></div>\r\n      {data.map((element) =>(\r\n          <aside onClick={handleElementClick} \r\n\t\t\t\t\t\tkey={element.name} \r\n\t\t\t\t\t\tdata-name={element.name} \r\n\t\t\t\t\t\tdata-category={element.category} style={{\r\n\t\t\t\t\t\t\topacity: periodicElOpacity,\r\n              gridColumn: element.xpos,\r\n              gridRow: element.ypos,\r\n              background: colorMap[element.category],\r\n              borderBottom: `2px solid ${colorMap[element.category]}`\r\n            }} className=\"element\">\r\n            <div className=\"element-atomic-no\">{element.number}</div>\r\n            <div className=\"element-symbol\">{element.symbol}</div>\r\n            <div className=\"element-name\">{element.name}</div>\r\n          </aside>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PeriodicTable\r\n","import pt from './PeriodTableData.json'\r\n\r\nexport const initialState = {\r\n\tuser: null,\r\n\tperiodicTable: pt.elements,\r\n\tcolorMap: {\r\n    \"noble gas\": \"#4d42b8\",\r\n    \"alkaline earth metal\":\"#e45143\",\r\n    \"diatomic nonmetal\":\"#D81159\",\r\n    \"alkali metal\":\"#8F2D56\",\r\n    \"transition metal\":\"#56423e\",\r\n    \"post-transition metal\":\"#7f4800\",\r\n    \"polyatomic nonmetal\": \"#00A300\",\r\n    actinide: \"#7f69e7\",\r\n    lanthanide:\"#008f7a\",\r\n    metalloid:\"#1e445d\",\r\n  },\r\n\tperiodicElOpacity: 1,\r\n}\r\n\r\nexport const actionTypes = {\r\n\tSET_USER: 'SET_USER',\r\n\tSET_PERIODIC_TABLE: 'SET_PERIODIC_TABLE',\r\n\tSET_PERIODIC_COLORS: 'SET_PERIODIC_COLORS',\r\n\tSET_PERIODIC_EL_OPACITY: 'SET_PERIODIC_EL_OPACITY',\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.SET_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.user,\r\n\t\t\t}\r\n\t\tcase actionTypes.SET_PERIODIC_TABLE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tperiodicTable: action.periodicTable,\r\n\t\t\t}\r\n\t\tcase actionTypes.SET_PERIODIC_COLORS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcolorMap: action.colorMap,\r\n\t\t\t}\r\n\t\tcase actionTypes.SET_PERIODIC_EL_OPACITY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tperiodicElOpacity: action.periodicElOpacity,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default reducer ","import React, { useRef } from 'react'\r\nimport { useDataLayerValue } from '../../DataLayer'\r\nimport { actionTypes } from '../../reducer'\r\n\r\nfunction PeriodicTableLegend() {\r\n  const [{colorMap}] = useDataLayerValue()\r\n  const [{}, dispatch] = useDataLayerValue()\r\n  const legendItem = useRef(null)\r\n\r\n  const handleCategoryClick = function (e) {\r\n\t\tlet targetEl = e.target\r\n    if (targetEl.parentElement.className !== \"pt-legend-item\") {\r\n      targetEl = targetEl.parentElement\r\n      console.log('If Part', targetEl)\r\n    } else {\r\n      targetEl = targetEl.parentElement\r\n      console.log('Else Part', targetEl)\r\n    }\r\n\r\n\t\tconst elcate = targetEl.dataset.category\r\n    if (typeof elcate === \"string\") {\r\n      dispatch({\r\n        type: actionTypes.SET_PERIODIC_EL_OPACITY,\r\n        periodicElOpacity: 0.5\r\n      })\r\n    }\r\n\r\n\t\tconsole.log(elcate)\r\n\t}\r\n\r\n  return (\r\n    <aside className=\"pt-legend\">\r\n      {Object.keys(colorMap).map((key) => (\r\n        <div onClick={handleCategoryClick}\r\n            key={key} \r\n            ref={legendItem}\r\n            data-category={key} \r\n            className=\"pt-legend-item\">\r\n          <div className=\"pt-legend-color\"style={{ background: colorMap[key] }}></div>\r\n          <div className=\"pt-legend-name\">{key}</div>\r\n        </div>\r\n      ))}\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default PeriodicTableLegend\r\n","import React from 'react'\r\nimport './AppWorkArea.css'\r\nimport PeriodicTable from '../PeriodicTable/PeriodicTable'\r\nimport PeriodicTableLegend from '../PeriodicTable/PeriodicTableLegend'\r\n\r\nfunction AppWorkArea() {\r\n  return (\r\n    <div className=\"centroid workarea\">\r\n      <h1>Periodic Table</h1>\r\n      <div className=\"workarea-periodic-table\">\r\n        <PeriodicTableLegend />\r\n        <PeriodicTable />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppWorkArea\r\n","export default __webpack_public_path__ + \"static/media/search.9e812a34.svg\";","import React, { useState } from 'react'\nimport './NavBar.css'\nimport SearchIcon from '../../ico/search.svg'\n\nfunction NavBar() {\n  const [menuOpen, setMenuOpen] = useState(false)\n  const [menuCloseClass, setMenuCloseClass] = useState('')\n  const handleMenuState = () => {\n    if (menuOpen === false) {\n      setMenuOpen(true)\n      setMenuCloseClass('menu-tapped')\n    } else {\n      setMenuOpen(false)\n      setMenuCloseClass('')\n    }\n  }\n\n  return (\n    <nav className=\"navbar\">\n      <div onClick={handleMenuState} className={`navbar-item navbar-menu ${menuCloseClass}`}>\n      <div className=\"middle\"></div>\n      </div>\n      <div className=\"navbar-item navbar-name\">\n        Periodic Table\n      </div>\n      <div className=\"navbar-item navbar-search\">\n        <img src={SearchIcon} alt=\"search icon\"/>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nimport './App.css'\nimport AppMenu from './components/AppMenu/AppMenu'\nimport AppWorkArea from './components/AppWorkArea/AppWorkArea'\nimport NavBar from './components/NavBar/NavBar'\n\nfunction App() {\n  return (\n    <section className=\"App\">\n      <NavBar />\n      <AppMenu />\n      <AppWorkArea />\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { DataLayer } from './DataLayer';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <DataLayer initialState={initialState} reducer={reducer}>\n    <App />\n  </DataLayer>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}