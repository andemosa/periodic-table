{"version":3,"sources":["components/AppMenu/AppMenu.js","DataLayer.js","components/PeriodicTable/PeriodicTable.js","components/PeriodicTable/PeriodicTableLegend.js","components/AppWorkArea/AppWorkArea.js","ico/search.svg","components/NavBar/NavBar.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["AppMenu","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","PeriodicTable","periodicTable","colorMap","data","className","map","element","style","gridColumn","xpos","gridRow","ypos","background","category","borderBottom","number","symbol","name","PeriodicTableLegend","Object","keys","key","AppWorkArea","NavBar","useState","menuOpen","setMenuOpen","menuCloseClass","setMenuCloseClass","onClick","src","SearchIcon","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","user","elements","actinide","lanthanide","metalloid","actionTypes","state","action","type","ReactDOM","render","document","getElementById"],"mappings":"ol6GAUeA,MARf,WACE,OACE,yB,eCGSC,G,MAAmBC,2BAEnBC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,SAA1B,OACxB,cAACL,EAAiBM,SAAlB,CAA2BC,MAAOC,qBAAWJ,EAASD,GAAtD,SACEE,KAKUI,EAAoB,kBAAMC,qBAAWV,ICWnCW,MAvBf,WAA0B,IAAD,EACEF,IAAlBG,EADgB,oBAChBA,cADgB,EAEHH,IAAbI,EAFgB,oBAEhBA,SACDC,EAAOF,EAEb,OACE,qBAAKG,UAAU,iBAAf,SACGD,EAAKE,KAAI,SAACC,GAAD,OACN,wBAA0BC,MAAO,CAC7BC,WAAYF,EAAQG,KACpBC,QAASJ,EAAQK,KACjBC,WAAYV,EAASI,EAAQO,UAC7BC,aAAa,aAAD,OAAeZ,EAASI,EAAQO,YAC3CT,UAAU,UALf,UAME,qBAAKA,UAAU,oBAAf,SAAoCE,EAAQS,SAC5C,qBAAKX,UAAU,iBAAf,SAAiCE,EAAQU,SACzC,qBAAKZ,UAAU,eAAf,SAA+BE,EAAQW,SAR7BX,EAAQW,YCMfC,MAff,WAAgC,IAAD,EACRpB,IAAbI,EADqB,oBACrBA,SAER,OACE,uBAAOE,UAAU,YAAjB,SACGe,OAAOC,KAAKlB,GAAUG,KAAI,SAACgB,GAAD,OACzB,sBAAejB,UAAU,iBAAzB,UACE,qBAAKA,UAAU,kBAAiBG,MAAO,CAAEK,WAAYV,EAASmB,MAC9D,qBAAKjB,UAAU,iBAAf,SAAiCiB,MAFzBA,SCQHC,MAZf,WACE,OACE,sBAAKlB,UAAU,oBAAf,UACE,gDACA,sBAAKA,UAAU,0BAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCXO,G,MAAA,IAA0B,oCCgC1BmB,MA5Bf,WAAmB,IAAD,EACgBC,oBAAS,GADzB,mBACTC,EADS,KACCC,EADD,OAE4BF,mBAAS,IAFrC,mBAETG,EAFS,KAEOC,EAFP,KAahB,OACE,sBAAKxB,UAAU,SAAf,UACE,qBAAKyB,QAZe,YACL,IAAbJ,GACFC,GAAY,GACZE,EAAkB,iBAElBF,GAAY,GACZE,EAAkB,MAMaxB,UAAS,kCAA6BuB,GAArE,SACA,qBAAKvB,UAAU,aAEf,qBAAKA,UAAU,0BAAf,4BAGA,qBAAKA,UAAU,4BAAf,SACE,qBAAK0B,IAAKC,EAAYC,IAAI,sBCVnBC,MAVf,WACE,OACE,0BAAS7B,UAAU,MAAnB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCLD3C,EAAe,CAC3BmD,KAAM,KACN1C,c,KAAkB2C,SAClB1C,SAAU,CACP,YAAa,UACb,uBAAuB,UACvB,oBAAoB,UACpB,eAAe,UACf,mBAAmB,UACnB,wBAAwB,UACxB,sBAAuB,UACvB2C,SAAU,UACVC,WAAW,UACXC,UAAU,YAIDC,EACF,WADEA,EAEQ,qBAFRA,EAGS,sBA0BPvD,EAvBC,SAACwD,EAAOC,GAEvB,OAAQA,EAAOC,MACd,KAAKH,EACJ,OAAO,2BACHC,GADJ,IAECN,KAAMO,EAAOP,OAEf,KAAKK,EACJ,OAAO,2BACHC,GADJ,IAEChD,cAAeiD,EAAOjD,gBAExB,KAAK+C,EACJ,OAAO,2BACHC,GADJ,IAEC/C,SAAUgD,EAAOhD,WAEnB,QACC,OAAO+C,ICpCVG,IAASC,OACP,cAAC,EAAD,CAAW7D,aAAcA,EAAcC,QAASA,EAAhD,SACE,cAAC,EAAD,MAEF6D,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.8730057d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction AppMenu() {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppMenu\r\n","import React, {\r\n\tcreateContext,\r\n\tuseContext,\r\n\tuseReducer\r\n} from 'react'\r\n\r\n// prepare the datalayer\r\nexport const DataLayerContext = createContext()\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n\t<DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n\t\t{children}\r\n\t</DataLayerContext.Provider>\r\n)\r\n\r\n// allow data pulling from DataLayer\r\nexport const useDataLayerValue = () => useContext(DataLayerContext)","import React from 'react'\r\nimport './PeriodicTable.css'\r\nimport { useDataLayerValue } from '../../DataLayer'\r\n\r\nfunction PeriodicTable() {\r\n\tconst [{periodicTable}] = useDataLayerValue()\r\n\tconst [{colorMap}] = useDataLayerValue()\r\n  const data = periodicTable\r\n\r\n  return (\r\n    <div className=\"periodic-table\">\r\n      {data.map((element) =>(\r\n          <aside key={element.name} style={{\r\n              gridColumn: element.xpos,\r\n              gridRow: element.ypos,\r\n              background: colorMap[element.category],\r\n              borderBottom: `2px solid ${colorMap[element.category]}`\r\n            }} className=\"element\">\r\n            <div className=\"element-atomic-no\">{element.number}</div>\r\n            <div className=\"element-symbol\">{element.symbol}</div>\r\n            <div className=\"element-name\">{element.name}</div>\r\n          </aside>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PeriodicTable\r\n","import React from 'react'\r\nimport { useDataLayerValue } from '../../DataLayer'\r\n\r\nfunction PeriodicTableLegend() {\r\n  const [{colorMap}] = useDataLayerValue()\r\n\r\n  return (\r\n    <aside className=\"pt-legend\">\r\n      {Object.keys(colorMap).map((key) => (\r\n        <div key={key} className=\"pt-legend-item\">\r\n          <div className=\"pt-legend-color\"style={{ background: colorMap[key] }}></div>\r\n          <div className=\"pt-legend-name\">{key}</div>\r\n        </div>\r\n      ))}\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default PeriodicTableLegend\r\n","import React from 'react'\r\nimport './AppWorkArea.css'\r\nimport PeriodicTable from '../PeriodicTable/PeriodicTable'\r\nimport PeriodicTableLegend from '../PeriodicTable/PeriodicTableLegend'\r\n\r\nfunction AppWorkArea() {\r\n  return (\r\n    <div className=\"centroid workarea\">\r\n      <h1>Periodic Table</h1>\r\n      <div className=\"workarea-periodic-table\">\r\n        <PeriodicTableLegend />\r\n        <PeriodicTable />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppWorkArea\r\n","export default __webpack_public_path__ + \"static/media/search.9e812a34.svg\";","import React, { useState } from 'react'\nimport './NavBar.css'\nimport SearchIcon from '../../ico/search.svg'\n\nfunction NavBar() {\n  const [menuOpen, setMenuOpen] = useState(false)\n  const [menuCloseClass, setMenuCloseClass] = useState('')\n  const handleMenuState = () => {\n    if (menuOpen === false) {\n      setMenuOpen(true)\n      setMenuCloseClass('menu-tapped')\n    } else {\n      setMenuOpen(false)\n      setMenuCloseClass('')\n    }\n  }\n\n  return (\n    <nav className=\"navbar\">\n      <div onClick={handleMenuState} className={`navbar-item navbar-menu ${menuCloseClass}`}>\n      <div className=\"middle\"></div>\n      </div>\n      <div className=\"navbar-item navbar-name\">\n        Periodic Table\n      </div>\n      <div className=\"navbar-item navbar-search\">\n        <img src={SearchIcon} alt=\"search icon\"/>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nimport './App.css'\nimport AppMenu from './components/AppMenu/AppMenu'\nimport AppWorkArea from './components/AppWorkArea/AppWorkArea'\nimport NavBar from './components/NavBar/NavBar'\n\nfunction App() {\n  return (\n    <section className=\"App\">\n      <NavBar />\n      <AppMenu />\n      <AppWorkArea />\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import pt from './PeriodTableData.json'\r\n\r\nexport const initialState = {\r\n\tuser: null,\r\n\tperiodicTable: pt.elements,\r\n\tcolorMap: {\r\n    \"noble gas\": \"#4d42b8\",\r\n    \"alkaline earth metal\":\"#e45143\",\r\n    \"diatomic nonmetal\":\"#D81159\",\r\n    \"alkali metal\":\"#8F2D56\",\r\n    \"transition metal\":\"#56423e\",\r\n    \"post-transition metal\":\"#7f4800\",\r\n    \"polyatomic nonmetal\": \"#00A300\",\r\n    actinide: \"#7f69e7\",\r\n    lanthanide:\"#008f7a\",\r\n    metalloid:\"#1e445d\",\r\n  },\r\n}\r\n\r\nexport const actionTypes = {\r\n\tSET_USER: 'SET_USER',\r\n\tSET_PERIODIC_TABLE: 'SET_PERIODIC_TABLE',\r\n\tSET_PERIODIC_COLORS: 'SET_PERIODIC_COLORS',\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.SET_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.user,\r\n\t\t\t}\r\n\t\tcase actionTypes.SET_PERIODIC_TABLE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tperiodicTable: action.periodicTable,\r\n\t\t\t}\r\n\t\tcase actionTypes.SET_PERIODIC_COLORS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcolorMap: action.colorMap,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default reducer ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { DataLayer } from './DataLayer';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <DataLayer initialState={initialState} reducer={reducer}>\n    <App />\n  </DataLayer>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}